name: Deploy

env:
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

on:
  push:
    branches:
      - cloudflare-pages
  pull_request:
    branches:
      - cloudflare-pages
    types:
      - opened
      - synchronize

jobs:
  deploy:
    name: Deploy
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".tool-versions"

      - name: Set up pnpm
        uses: pnpm/action-setup@v3

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: pnpm-deps-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Run build
        run: pnpm build

      - name: Deploy to production
        if: ${{ startsWith(github.ref, 'refs/heads/cloudflare-pages') }}
        run: |
          pnpm wrangler pages deploy build/client \
            --branch=producion \
            --project-name=esfliegt

      - name: Deploy to preview branch
        if: ${{ github.event.pull_request.state == 'open' }}
        run: |
          pnpm wrangler pages deploy build/client \
            --branch=preview \
            --project-name=esfliegt
